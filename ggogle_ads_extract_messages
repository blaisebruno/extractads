// Ads Extractor 1.03
// Par Blaise & Bruno 3-2023
//
// Extraction de l'intégralité des messsages publicitaires du compte dans un Google Sheet (headlines + description) 


// Votre google sheet (accessible par le même user google ads)
var SPREADSHEET_URL = "https://docs.google.com/spreadsheets/d/1y6POC7ZMZBkOjdkPclqJ9LxOIUtl7c7HqtKRwGuRkJU/" ; 

// Filtrer par nom de campagne ou laisser vide pour l'extraction de tout le compte 
var CAMPAIGN_LIKE = "" ;  

// Filtrer par ad status
var AD_STATUS = "ENABLED" ;  // ENABLED, PAUSED, REMOVED ou laisser vide pour l'extraction de toutes lea Ads 



function main() {
  
  var ss = SpreadsheetApp.openByUrl(SPREADSHEET_URL); 
  result = extractAds(ss);   
} 
 
  
function extractAds(ss) {   
  
 var gaql =  `SELECT ad_group_ad.ad.type, 
              ad_group_ad.ad.responsive_search_ad.headlines,
              ad_group_ad.ad.responsive_search_ad.descriptions,
              ad_group_ad.ad.expanded_text_ad.headline_part1,
              ad_group_ad.ad.expanded_text_ad.headline_part2,
              ad_group_ad.ad.expanded_text_ad.headline_part3,
              ad_group_ad.ad.expanded_text_ad.description,
              ad_group_ad.ad.expanded_text_ad.description2,
              ad_group_ad.ad.discovery_multi_asset_ad.headlines,
              ad_group_ad.ad.discovery_multi_asset_ad.descriptions           
              FROM ad_group_ad 
              `;
  
  if (CAMPAIGN_LIKE || AD_STATUS) gaql += " WHERE " ;
  if (CAMPAIGN_LIKE) gaql += " campaign.name LIKE '%" + CAMPAIGN_LIKE + "%'" ;   
  if (AD_STATUS) gaql += " ad_group_ad.status = '" + AD_STATUS + "'" ;  
 
  rows = AdsApp.report(gaql, {}).rows() ;  
  
  var gaqlPMAX =  `SELECT customer.id,
                    customer.descriptive_name,
                    campaign.name,
                    asset_group_asset.field_type,
                    asset.name,
                    asset_group.name,
                    asset.call_to_action_asset.call_to_action,
                    asset.type,
                    asset.text_asset.text,
                    asset.image_asset.full_size.url,
                    asset.youtube_video_asset.youtube_video_id,
                    asset_group_asset.performance_label,
                    asset_group_asset.status
                    FROM asset_group_asset 
                `;
  
  if (CAMPAIGN_LIKE || AD_STATUS) gaqlPMAX += " WHERE " ;
  if (CAMPAIGN_LIKE) gaqlPMAX += " campaign.name LIKE '%" + CAMPAIGN_LIKE + "%'" ;   
  if (AD_STATUS) gaqlPMAX += " asset_group_asset.status = '" + AD_STATUS + "'" ;  
 
  rowsPMAX = AdsApp.report(gaqlPMAX, {}).rows() ;  
  
  
  var headlines = [] ;
  var descriptions = [] ; 
  
  var sheetHeadlines = ss.getSheetByName("Ads"); 
  sheetHeadlines.activate();
  sheetHeadlines.clearContents(); 
  
  while (rows.hasNext()) {

   var row = rows.next();
    
   var adType = row['ad_group_ad.ad.type'] ;    
    
   var adHeadings, adDescriptions ;  

   if (adType == 'EXPANDED_TEXT_AD') {
         adHeadings = row['ad_group_ad.ad.expanded_text_ad.headline_part1'] ;
         if (headlines.indexOf(adHeadings) === -1) headlines.push(adHeadings);
         adHeadings = row['ad_group_ad.ad.expanded_text_ad.headline_part2'] ;
         if (headlines.indexOf(adHeadings) === -1) headlines.push(adHeadings);
         adHeadings = row['ad_group_ad.ad.expanded_text_ad.headline_part3'] ;
         if (headlines.indexOf(adHeadings) === -1) headlines.push(adHeadings);

         adDescriptions = row['ad_group_ad.ad.expanded_text_ad.description'] ;
         if (descriptions.indexOf(adDescriptions) === -1) descriptions.push(adDescriptions);
         adDescriptions = row['ad_group_ad.ad.expanded_text_ad.description2'] ;
         if (descriptions.indexOf(adDescriptions) === -1) descriptions.push(adDescriptions);    
   }  
   else if (adType == 'RESPONSIVE_SEARCH_AD') {
         adHeadings = row['ad_group_ad.ad.responsive_search_ad.headlines'] ;
         adHeadings.forEach(function(adHeading){
            if (headlines.indexOf(adHeading.text) === -1) headlines.push(adHeading.text);      
         }); 
         adDescriptions = row['ad_group_ad.ad.responsive_search_ad.descriptions'] ;
         adDescriptions.forEach(function(adDescription){
            if (descriptions.indexOf(adDescription.text) === -1) descriptions.push(adDescription.text);      
         }); 
   }   
   else if (adType == 'DISCOVERY_MULTI_ASSET_AD') {  
         adHeadings = row['ad_group_ad.ad.discovery_multi_asset_ad.headlines'] ;
         adHeadings.forEach(function(adHeading){
            if (headlines.indexOf(adHeading.text) === -1) headlines.push(adHeading.text);      
         }); 
         adDescriptions = row['ad_group_ad.ad.discovery_multi_asset_ad.descriptions'] ;
         adDescriptions.forEach(function(adDescription){
            if (descriptions.indexOf(adDescription.text) === -1) descriptions.push(adDescription.text);      
         });       
   }   

  } // loop
  
   while (rowsPMAX.hasNext()) {

   var rowPMAX = rowsPMAX.next();
   var adType = rowPMAX['asset.type'] ;
   var fieldType = rowPMAX['asset_group_asset.field_type'] ; 
    
   var adHeadings, adDescriptions ;  

   if (adType == 'TEXT') {
      var adText = rowPMAX['asset.text_asset.text'] ;
     
      if (fieldType == 'HEADLINE') {        
         if (headlines.indexOf(adText) === -1) headlines.push(adText);   
      } else if (fieldType == 'LONG_HEADLINE'|| fieldType == 'DESCRIPTION') {
         if (descriptions.indexOf(adText) === -1) descriptions.push(adText);
      }
   }  

   } // loop

  headlines.sort();
  descriptions.sort();
  
  var maxLength = Math.max(headlines.length, descriptions.length);

  for (var i = 0; i < maxLength; i++) {
    var headline = headlines[i] || "";
    var description = descriptions[i] || "";
    
  if (/[+-=]/.test(headline)) {
    headline = headline.replace(lChar = headline.charAt(0), "'" + headline.charAt(0));
  }

  if (/[+-=]/.test(description)) {
    description = description.replace(lChar = description.charAt(0), "'" + description.charAt(0));
  }

  sheetHeadlines.appendRow([headline, description]);
  
}

return '' ;

}
